//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SecuLobbyVMS.smartWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SmartISS_ServiceSoap", Namespace="SmartISS_Service")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SqlDbParam[]))]
    public partial class SmartISS_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTADataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetInterfaceDSOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConnectivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDataInterfaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEmailInterfaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback UseServiceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SmartISS_Service() {
            this.Url = global::SecuLobbyVMS.Properties.Settings.Default.SecuLobbyVMS_smartWS_SmartISS_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event GetTADataCompletedEventHandler GetTADataCompleted;
        
        /// <remarks/>
        public event SetInterfaceDSCompletedEventHandler SetInterfaceDSCompleted;
        
        /// <remarks/>
        public event TestConnectivityCompletedEventHandler TestConnectivityCompleted;
        
        /// <remarks/>
        public event SetDataInterfaceCompletedEventHandler SetDataInterfaceCompleted;
        
        /// <remarks/>
        public event SetEmailInterfaceCompletedEventHandler SetEmailInterfaceCompleted;
        
        /// <remarks/>
        public event AuthenticateCompletedEventHandler AuthenticateCompleted;
        
        /// <remarks/>
        public event GetTokenCompletedEventHandler GetTokenCompleted;
        
        /// <remarks/>
        public event UseServiceCompletedEventHandler UseServiceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SmartISS_Service/GetData", RequestNamespace="SmartISS_Service", ResponseNamespace="SmartISS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData(string ProcName) {
            object[] results = this.Invoke("GetData", new object[] {
                        ProcName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(string ProcName) {
            this.GetDataAsync(ProcName, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(string ProcName, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        ProcName}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SmartISS_Service/GetTAData", RequestNamespace="SmartISS_Service", ResponseNamespace="SmartISS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTAData(string ProcName, string FromDate, string ToDate) {
            object[] results = this.Invoke("GetTAData", new object[] {
                        ProcName,
                        FromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTADataAsync(string ProcName, string FromDate, string ToDate) {
            this.GetTADataAsync(ProcName, FromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void GetTADataAsync(string ProcName, string FromDate, string ToDate, object userState) {
            if ((this.GetTADataOperationCompleted == null)) {
                this.GetTADataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTADataOperationCompleted);
            }
            this.InvokeAsync("GetTAData", new object[] {
                        ProcName,
                        FromDate,
                        ToDate}, this.GetTADataOperationCompleted, userState);
        }
        
        private void OnGetTADataOperationCompleted(object arg) {
            if ((this.GetTADataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTADataCompleted(this, new GetTADataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SmartISS_Service/SetInterfaceDS", RequestNamespace="SmartISS_Service", ResponseNamespace="SmartISS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SetInterfaceDS(string procedure, string Operation, SqlDbParam[] list, System.Data.DataSet ds, out string errcode, out string message) {
            object[] results = this.Invoke("SetInterfaceDS", new object[] {
                        procedure,
                        Operation,
                        list,
                        ds});
            errcode = ((string)(results[1]));
            message = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SetInterfaceDSAsync(string procedure, string Operation, SqlDbParam[] list, System.Data.DataSet ds) {
            this.SetInterfaceDSAsync(procedure, Operation, list, ds, null);
        }
        
        /// <remarks/>
        public void SetInterfaceDSAsync(string procedure, string Operation, SqlDbParam[] list, System.Data.DataSet ds, object userState) {
            if ((this.SetInterfaceDSOperationCompleted == null)) {
                this.SetInterfaceDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetInterfaceDSOperationCompleted);
            }
            this.InvokeAsync("SetInterfaceDS", new object[] {
                        procedure,
                        Operation,
                        list,
                        ds}, this.SetInterfaceDSOperationCompleted, userState);
        }
        
        private void OnSetInterfaceDSOperationCompleted(object arg) {
            if ((this.SetInterfaceDSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetInterfaceDSCompleted(this, new SetInterfaceDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SmartISS_Service/TestConnectivity", RequestNamespace="SmartISS_Service", ResponseNamespace="SmartISS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TestConnectivity() {
            object[] results = this.Invoke("TestConnectivity", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TestConnectivityAsync() {
            this.TestConnectivityAsync(null);
        }
        
        /// <remarks/>
        public void TestConnectivityAsync(object userState) {
            if ((this.TestConnectivityOperationCompleted == null)) {
                this.TestConnectivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConnectivityOperationCompleted);
            }
            this.InvokeAsync("TestConnectivity", new object[0], this.TestConnectivityOperationCompleted, userState);
        }
        
        private void OnTestConnectivityOperationCompleted(object arg) {
            if ((this.TestConnectivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConnectivityCompleted(this, new TestConnectivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SmartISS_Service/SetDataInterface", RequestNamespace="SmartISS_Service", ResponseNamespace="SmartISS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SetDataInterface(string procedure, string Operation, SqlDbParam[] list, out string errcode, out string message) {
            object[] results = this.Invoke("SetDataInterface", new object[] {
                        procedure,
                        Operation,
                        list});
            errcode = ((string)(results[1]));
            message = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SetDataInterfaceAsync(string procedure, string Operation, SqlDbParam[] list) {
            this.SetDataInterfaceAsync(procedure, Operation, list, null);
        }
        
        /// <remarks/>
        public void SetDataInterfaceAsync(string procedure, string Operation, SqlDbParam[] list, object userState) {
            if ((this.SetDataInterfaceOperationCompleted == null)) {
                this.SetDataInterfaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDataInterfaceOperationCompleted);
            }
            this.InvokeAsync("SetDataInterface", new object[] {
                        procedure,
                        Operation,
                        list}, this.SetDataInterfaceOperationCompleted, userState);
        }
        
        private void OnSetDataInterfaceOperationCompleted(object arg) {
            if ((this.SetDataInterfaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDataInterfaceCompleted(this, new SetDataInterfaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SmartISS_Service/SetEmailInterface", RequestNamespace="SmartISS_Service", ResponseNamespace="SmartISS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SetEmailInterface(
                    string procedure, 
                    string Operation, 
                    SqlDbParam[] list, 
                    bool saveLogs, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bytes, 
                    string token, 
                    string visPhone, 
                    string fromEmail, 
                    string visEmail, 
                    string dts, 
                    string vmsg, 
                    string PersonName, 
                    string Duration, 
                    string txtParking, 
                    string HostName, 
                    string Location, 
                    bool blapprove, 
                    string Links, 
                    string EmailID, 
                    string EmailPassword, 
                    string EmailMask, 
                    string EmailSubject, 
                    string EmailPort, 
                    string EmailSMTP, 
                    string EmailEnableSsl, 
                    out string errcode, 
                    out string message) {
            object[] results = this.Invoke("SetEmailInterface", new object[] {
                        procedure,
                        Operation,
                        list,
                        saveLogs,
                        bytes,
                        token,
                        visPhone,
                        fromEmail,
                        visEmail,
                        dts,
                        vmsg,
                        PersonName,
                        Duration,
                        txtParking,
                        HostName,
                        Location,
                        blapprove,
                        Links,
                        EmailID,
                        EmailPassword,
                        EmailMask,
                        EmailSubject,
                        EmailPort,
                        EmailSMTP,
                        EmailEnableSsl});
            errcode = ((string)(results[1]));
            message = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SetEmailInterfaceAsync(
                    string procedure, 
                    string Operation, 
                    SqlDbParam[] list, 
                    bool saveLogs, 
                    byte[] bytes, 
                    string token, 
                    string visPhone, 
                    string fromEmail, 
                    string visEmail, 
                    string dts, 
                    string vmsg, 
                    string PersonName, 
                    string Duration, 
                    string txtParking, 
                    string HostName, 
                    string Location, 
                    bool blapprove, 
                    string Links, 
                    string EmailID, 
                    string EmailPassword, 
                    string EmailMask, 
                    string EmailSubject, 
                    string EmailPort, 
                    string EmailSMTP, 
                    string EmailEnableSsl) {
            this.SetEmailInterfaceAsync(procedure, Operation, list, saveLogs, bytes, token, visPhone, fromEmail, visEmail, dts, vmsg, PersonName, Duration, txtParking, HostName, Location, blapprove, Links, EmailID, EmailPassword, EmailMask, EmailSubject, EmailPort, EmailSMTP, EmailEnableSsl, null);
        }
        
        /// <remarks/>
        public void SetEmailInterfaceAsync(
                    string procedure, 
                    string Operation, 
                    SqlDbParam[] list, 
                    bool saveLogs, 
                    byte[] bytes, 
                    string token, 
                    string visPhone, 
                    string fromEmail, 
                    string visEmail, 
                    string dts, 
                    string vmsg, 
                    string PersonName, 
                    string Duration, 
                    string txtParking, 
                    string HostName, 
                    string Location, 
                    bool blapprove, 
                    string Links, 
                    string EmailID, 
                    string EmailPassword, 
                    string EmailMask, 
                    string EmailSubject, 
                    string EmailPort, 
                    string EmailSMTP, 
                    string EmailEnableSsl, 
                    object userState) {
            if ((this.SetEmailInterfaceOperationCompleted == null)) {
                this.SetEmailInterfaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEmailInterfaceOperationCompleted);
            }
            this.InvokeAsync("SetEmailInterface", new object[] {
                        procedure,
                        Operation,
                        list,
                        saveLogs,
                        bytes,
                        token,
                        visPhone,
                        fromEmail,
                        visEmail,
                        dts,
                        vmsg,
                        PersonName,
                        Duration,
                        txtParking,
                        HostName,
                        Location,
                        blapprove,
                        Links,
                        EmailID,
                        EmailPassword,
                        EmailMask,
                        EmailSubject,
                        EmailPort,
                        EmailSMTP,
                        EmailEnableSsl}, this.SetEmailInterfaceOperationCompleted, userState);
        }
        
        private void OnSetEmailInterfaceOperationCompleted(object arg) {
            if ((this.SetEmailInterfaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEmailInterfaceCompleted(this, new SetEmailInterfaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SmartISS_Service/Authenticate", RequestNamespace="SmartISS_Service", ResponseNamespace="SmartISS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Authenticate(string Key) {
            object[] results = this.Invoke("Authenticate", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string Key) {
            this.AuthenticateAsync(Key, null);
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string Key, object userState) {
            if ((this.AuthenticateOperationCompleted == null)) {
                this.AuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateOperationCompleted);
            }
            this.InvokeAsync("Authenticate", new object[] {
                        Key}, this.AuthenticateOperationCompleted, userState);
        }
        
        private void OnAuthenticateOperationCompleted(object arg) {
            if ((this.AuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateCompleted(this, new AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SmartISS_Service/GetToken", RequestNamespace="SmartISS_Service", ResponseNamespace="SmartISS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetToken() {
            object[] results = this.Invoke("GetToken", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTokenAsync() {
            this.GetTokenAsync(null);
        }
        
        /// <remarks/>
        public void GetTokenAsync(object userState) {
            if ((this.GetTokenOperationCompleted == null)) {
                this.GetTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTokenOperationCompleted);
            }
            this.InvokeAsync("GetToken", new object[0], this.GetTokenOperationCompleted, userState);
        }
        
        private void OnGetTokenOperationCompleted(object arg) {
            if ((this.GetTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTokenCompleted(this, new GetTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SmartISS_Service/UseService", RequestNamespace="SmartISS_Service", ResponseNamespace="SmartISS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UseService(string Key, string ServiceName) {
            object[] results = this.Invoke("UseService", new object[] {
                        Key,
                        ServiceName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UseServiceAsync(string Key, string ServiceName) {
            this.UseServiceAsync(Key, ServiceName, null);
        }
        
        /// <remarks/>
        public void UseServiceAsync(string Key, string ServiceName, object userState) {
            if ((this.UseServiceOperationCompleted == null)) {
                this.UseServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUseServiceOperationCompleted);
            }
            this.InvokeAsync("UseService", new object[] {
                        Key,
                        ServiceName}, this.UseServiceOperationCompleted, userState);
        }
        
        private void OnUseServiceOperationCompleted(object arg) {
            if ((this.UseServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UseServiceCompleted(this, new UseServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SmartISS_Service")]
    public partial class SqlDbParam {
        
        private string nameField;
        
        private object valueField;
        
        private int paramTypeField;
        
        private int sizeField;
        
        private ParameterDirection directionField;
        
        private string tableTypeNameField;
        
        private string tableNameField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public int ParamType {
            get {
                return this.paramTypeField;
            }
            set {
                this.paramTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public ParameterDirection Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        public string TableTypeName {
            get {
                return this.tableTypeNameField;
            }
            set {
                this.tableTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SmartISS_Service")]
    public enum ParameterDirection {
        
        /// <remarks/>
        Input,
        
        /// <remarks/>
        Output,
        
        /// <remarks/>
        InputOutput,
        
        /// <remarks/>
        ReturnValue,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetTADataCompletedEventHandler(object sender, GetTADataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTADataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTADataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetInterfaceDSCompletedEventHandler(object sender, SetInterfaceDSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetInterfaceDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetInterfaceDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errcode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TestConnectivityCompletedEventHandler(object sender, TestConnectivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConnectivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConnectivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetDataInterfaceCompletedEventHandler(object sender, SetDataInterfaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDataInterfaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDataInterfaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errcode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetEmailInterfaceCompletedEventHandler(object sender, SetEmailInterfaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEmailInterfaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEmailInterfaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errcode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuthenticateCompletedEventHandler(object sender, AuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetTokenCompletedEventHandler(object sender, GetTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UseServiceCompletedEventHandler(object sender, UseServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UseServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UseServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591